%implements s51_b0_c1dgk_3_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* MATLAB Function 'Thruster control /Thruster 1/Thruster control/Supervisor': '<S68>:1' */
/* '<S68>:1:2' */
localB->u = 1.0;
if (rtu_control == 1.0) {
    /* '<S68>:1:3' */
    if (rtu_input == 1.0) {
        /* '<S68>:1:4' */
        /* '<S68>:1:5' */
        localB->u = 1.0;
    } else if (rtu_input == 2.0) {
        /* '<S68>:1:6' */
        /* '<S68>:1:7' */
        localB->u = 2.0;
    } else if (((rtu_input == 3.0) && (rtu_n > 0.0)) || ((rtu_input == 3.0) && (rtu_n < 0.0))) {
        /* '<S68>:1:8' */
        /* '<S68>:1:9' */
        localB->u = 3.0;
    } else if ((rtu_input == 4.0) || ((rtu_input == 3.0) && (rtu_n == 0.0))) {
        /* '<S68>:1:10' */
        /* '<S68>:1:11' */
        localB->u = 4.0;
    } else {
        /* '<S68>:1:13' */
        localB->u = 5.0;
    }
}
if (rtu_control == 2.0) {
    /* '<S68>:1:17' */
    if (rtu_input == 1.0) {
        /* '<S68>:1:18' */
        /* '<S68>:1:19' */
        localB->u = 1.0;
    } else if (rtu_input == 2.0) {
        /* '<S68>:1:20' */
        /* '<S68>:1:21' */
        localB->u = 2.0;
    } else if (((rtu_input == 3.0) && (rtu_n > 0.0)) || ((rtu_input == 3.0) && (rtu_n < 0.0))) {
        /* '<S68>:1:22' */
        /* '<S68>:1:23' */
        localB->u = 3.0;
    } else if ((rtu_input == 4.0) || ((rtu_input == 3.0) && (rtu_n == 0.0))) {
        /* '<S68>:1:24' */
        /* '<S68>:1:25' */
        localB->u = 4.0;
    } else {
        /* '<S68>:1:27' */
        localB->u = 5.0;
    }
}
if (rtu_control == 3.0) {
    /* '<S68>:1:31' */
    if (rtu_input == 1.0) {
        /* '<S68>:1:32' */
        /* '<S68>:1:33' */
        localB->u = 1.0;
    } else if (rtu_input == 2.0) {
        /* '<S68>:1:34' */
        /* '<S68>:1:35' */
        localB->u = 2.0;
    } else if (((rtu_input == 3.0) && (rtu_n > 0.0)) || ((rtu_input == 3.0) && (rtu_n < 0.0))) {
        /* '<S68>:1:36' */
        /* '<S68>:1:37' */
        localB->u = 3.0;
    } else if ((rtu_input == 4.0) || ((rtu_input == 3.0) && (rtu_n == 0.0))) {
        /* '<S68>:1:38' */
        /* '<S68>:1:39' */
        localB->u = 4.0;
    } else {
        /* '<S68>:1:41' */
        localB->u = 5.0;
    }
}
if (rtu_control == 4.0) {
    /* '<S68>:1:45' */
    if (rtu_input == 1.0) {
        /* '<S68>:1:46' */
        /* '<S68>:1:47' */
        localB->u = 1.0;
    } else if (rtu_input == 2.0) {
        /* '<S68>:1:48' */
        /* '<S68>:1:49' */
        localB->u = 2.0;
    } else if (((rtu_input == 3.0) && (rtu_n > 0.0)) || ((rtu_input == 3.0) && (rtu_n < 0.0))) {
        /* '<S68>:1:50' */
        /* '<S68>:1:51' */
        localB->u = 3.0;
    } else if ((rtu_input == 4.0) || ((rtu_input == 3.0) && (rtu_n == 0.0))) {
        /* '<S68>:1:52' */
        /* '<S68>:1:53' */
        localB->u = 4.0;
    } else {
        /* '<S68>:1:55' */
        localB->u = 5.0;
    }
}
if (rtu_control == 5.0) {
    /* '<S68>:1:59' */
    if (rtu_input == 1.0) {
        /* '<S68>:1:60' */
        /* '<S68>:1:61' */
        localB->u = 1.0;
    } else if (rtu_input == 2.0) {
        /* '<S68>:1:62' */
        /* '<S68>:1:63' */
        localB->u = 2.0;
    } else if (((rtu_input == 3.0) && (rtu_n > 0.0)) || ((rtu_input == 3.0) && (rtu_n < 0.0))) {
        /* '<S68>:1:64' */
        /* '<S68>:1:65' */
        localB->u = 3.0;
    } else if ((rtu_input == 4.0) || ((rtu_input == 3.0) && (rtu_n == 0.0))) {
        /* '<S68>:1:66' */
        /* '<S68>:1:67' */
        localB->u = 4.0;
    } else {
        /* '<S68>:1:69' */
        localB->u = 5.0;
    }
}
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[3].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(3, 0, 0)>
%endif
%if SLibCG_ArgAccessed(3, 0, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface))
%<SLibCG_UndoAccessArg(3, 0, 0)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
static void ctrl_custom_Supervisor(\
%assign comma = ""
%if SLibCG_ArgAccessed(3, 0, 0)
%<comma>%<tSimStructType> * const %<tSimStruct>\
%assign comma = ", "
%endif
%<comma>real_T rtu_control\
%assign comma = ", "
%<comma>real_T rtu_input\
%assign comma = ", "
%<comma>real_T rtu_n\
%assign comma = ", "
%<comma>B_Supervisor_ctrl_custom_T *localB\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(3, 0, fcnProtoType)>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
