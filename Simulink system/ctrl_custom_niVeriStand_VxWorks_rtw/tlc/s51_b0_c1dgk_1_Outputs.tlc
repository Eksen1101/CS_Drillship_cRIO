%implements s51_b0_c1dgk_1_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
/* MATLAB Function 'Thruster control /Thrust and Shaft speed mapped to PWM/MATLAB Function2': '<S56>:1' */
if (rtu_signal >= 0.0) {
    /* '<S56>:1:4' */
    /* '<S56>:1:5' */
    localB->Tc_out = rtu_Tc_in1;
} else {
    /* signal < 0 */
    /* '<S56>:1:7' */
    localB->Tc_out = rtu_Tc_in2;
}
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[1].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(1, 0, 0)>
%endif
%if SLibCG_ArgAccessed(1, 0, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, SLibSystemFcnPeriodicRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface))
%<SLibCG_UndoAccessArg(1, 0, 0)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
static void ctrl_custom_MATLABFunction2(\
%assign comma = ""
%if SLibCG_ArgAccessed(1, 0, 0)
%<comma>%<tSimStructType> * const %<tSimStruct>\
%assign comma = ", "
%endif
%<comma>real_T rtu_Tc_in1\
%assign comma = ", "
%<comma>real_T rtu_signal\
%assign comma = ", "
%<comma>real_T rtu_Tc_in2\
%assign comma = ", "
%<comma>B_MATLABFunction2_ctrl_custom_T *localB\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(1, 0, fcnProtoType)>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
